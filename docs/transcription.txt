Hello everyone, My name is Dr. Raj Dandekar and I have a PhD in machine learning from MIT. In this video I am going to share with you all my experience of interviewing with Meta or Facebook for their machine learning Software Development Engineer position. I had an interview with Meta in 2020 for their summer internship while I was doing my PhD at MIT. My experience will be quite different because I am not a traditional computer science engineer but I have a background in Mechanical engineering. I had taken no computer science courses in my undergraduate and that's why this whole software development engineering interview experience was completely new for me. I hope people and students from different branches who are aiming to get into these top companies will relate to this video. If you are from computer science background, still follow along because you will gain a lot of insights from my experience. Stay with me till the end to see whether I got accepted or rejected at Meta. See you inside. So it all started with this LinkedIn message which I received from a recruiter. I tried various other things such as getting referrals from friends applying on companies portals but none of it seemed to work. The only thing which worked for me I think is during my Ph.D. i had some publications and I put them on my LinkedIn profile and I made my LinkedIn profile bit better and added a section on open to work. That's how I received I started receiving messages from recruiters. I'll maybe make another video based on how I started receiving offers from recruiters without me reaching to them. So in 2020 I received an email from a recruiter at Facebook or a LinkedIn message which I've shown here right now and this said that I am a PhD university recruiter at Facebook and I recently came across your LinkedIn profile. Are you currently seeking an ML software engineering internship for the summer of 2021? Check out our software engineering PhD intern further, he encouraged me to email to them my resume if I'm interested in being a mechanical engineer. I never thought I would get into a company like Meta or Facebook. So this was an amazing opportunity for me and I immediately emailed them. I emailed them about my PhD work, what I was working on, what is my strongest programming language, what is my expected graduation date, what is my location preference, whether I am interviewing for other companies and I also attached my resume for their reference and here was the reply which they gave. They said that thanks for taking the time to fill out the information below and we would like to begin the interview process with you. All of this was amazing. I was very happy. But then I read one Sentence which really scared me and it was this particular sentence. The first stage will be a 2:45 minute coding interviews that will take place between you and a Facebook engineer. When I read this, all my excitement came crashing down. When I read this sentence, I was extremely scared. Being a mechanical engineering, I had never given a coding interview before, let alone giving a coding interview. The prospect of someone sitting in front of you while you are coding that to a lead machine learning engineer at Facebook sitting in front of you while you are coding live, that really, really scared me. And I felt I was not prepared for this at all. Let's see what I did. So here's what I did. In terms of preparation, one thing which Facebook actually does very nicely is that when they are considering you for interviews, they themselves say that when scheduling your interview, please review the material and take adequate time to prepare. They say that additional prep time can be arranged if need be. I am always happy to schedule a call as well at any time. So that way Facebook is actually very cooperative and supportive in the interview process and they tell you that you need to prepare nicely and don't hurry in scheduling the interview. That's one aspect I really liked about their interview process that still didn't reduce my fear because I did not know what to prepare at all. One thing which Facebook also gave me is a coding preparation guide. This is a six page document which they gave me. It's a technical screen interview guide. Most of it was about what they look for but they told me that gave me four steps. First is before you practice you should plan use key practice strategies to practice effectively. Then they told me that understand the types of problems you might encounter and focus on edge cases. Then they told me the resources you can use such as Facebook Sample Interview problems Interview Bit, leetcode and hackerrank. This was good. So Facebook themselves were guiding me and supporting me through the process. But I knew that I cannot select or schedule a date which was too far into the future nor can I select it too early. So I decided that I will schedule a date one month after. So here you can see that after I selected the time slot they said that we are excited to set up an interview for you which will be a 45 minute interview. And this interview was supposed to happen one month after this initial message which came. One more thing Facebook does actually quite well is that they encourage you to create a career profile on their dashboard where you can go to preparation hub and then you can see some sample sample things such as the lessons there. They have their own lessons so here you can see they have their lessons for the coding interview. They even have sample interview questions actually which they ask. So they have interview stories and many different things. That way everything is really organized. I also like this a lot about their interview process. Then came my coding preparation journey which I knew was the most important. And the decision for my selection will rest on how I do in the coding interviews. I had one month to prepare because I had selected a slot one month after the initial message on LinkedIn. Now I know that software engineers who are trained and people from CS who regularly interview for software development engineer positions, they train for three months, four months, etc. But I was a mechanical engineer and I did not have this luxury for training for so much amount of time. So I just had one month to prepare and I decided to make maximum use of that one month. What I did next was I talked with some friends and I discovered that leetcode is the place to go for preparation. I further discovered that I need to have a mastery with respect to arrays and strings, hashing, linked list stacks and queues, trees and graphs, heaps, binary search, backtracking, dynamic programming, and I need to have this mastery over all of these sections in a period of one month. I also realized by talking to people that there are so many problems on leetcode and experienced people who really get top offers, they do 500, 600 problems. But all of this was really new to me and I did not have time to do too many of these questions. So I found a place called blind 75 lead code questions which are the top questions from so which has top 10 to 15 questions from each category which are the main questions which you should prepare for. So I decided to focus on these 75 questions and give my complete dedication and attention to these questions without thinking of focusing on 500 to 600 questions. So here you can see that there were several different sections and in each section there were coding questions which I needed to practice. So what I did was as follows. I went to one coding question here, let's say two sum. I started with this. Initially I decided to choose my language as Python. There are many languages you can choose from, but I decided to go with Python. I had a basic background of Python, not too much in detail, but I decided to learn on the go. Initially, when I looked at a question such as given an array of integers, nums and an integer target, written indices of two numbers such that they add up to target, it was impossible for me to do initial questions on my own. So almost every Single time I used to see the solution and I saw the solution which were rated the most, I looked at the solutions, especially which had the highest number of votes. So for example, this has 5.44k upvotes and 1 million views. So I looked at these solutions. But one thing I did which I think was very good, was that even after looking at solutions, I did not move to the next question. I wrote that solution entirely on my own and I coded it up entirely on my own, again, irrespective of having seen the solution. And this really, really introduced me to the nuances of code writing, such as the time complexity, considering different edge cases, etc. For the initial 15 to 20 problems, it was very difficult for me to do the things on my own. But as I moved to problem number 20 to problem number 25, I realized that I was really getting better at doing easy questions. So LEET code questions are divided into easy, medium and hard. And after 20 to 25 questions, looking at the solution, looking at the best solution, and then writing it again on my own, I became quite good at doing the easy questions on my own. Medium and hard questions were again very difficult for me. I continued to practice six to eight hours every day. And eventually before the interview, I managed to at least go through these 75 questions. Once I was able to do all easy questions on my own, I was able to do 50% of the medium questions and I was not able to do any hard question on my own within this period of time. But I was ready to give my best on the interview day. Finally came the interview day and I was really scared. I was scared and anxious to do the coding in front of the Facebook lead recruiter. But some of my anxiety had reduced because of all this practice. Although before I jumped on the call with him, my heart was beating quite fast because of the anxiety when the call actually started. The interviewer gave me this particular problem in my first first round of coding interview, which is longest repeating character replacement. And he made sure that I understood the question. He made sure that I really knew what is being asked in the question. So that is one thing which I really appreciate from the interviewer. They were very helpful throughout the process. They supported me. Now, I had done this particular problem or a variety of it in the leetcode question. And I knew that a particular approach to this was called as the sliding window approach. In particular, my solution had a time complexity of order of n and a space complexity of order of one. And I implemented a sliding window kind of an approach which Looks something like this. I was actually quite successful in this round because I had done this question before and that's why I was able to code everything from scratch. I was even able to do the edge cases correctly. And I thought this interview, this round went successfully. Then came the second round of interview which happened I think two days later or three days later. And it turned out that the second round was a hard question. Merge case sorted list. And I knew that this was a hard question and I am not able to to do it fully. So I actually panicked during the second round of interview and I could not proceed too much further. I took help from the interviewer at several different points. I asked him for hints and he was very supportive throughout the process. He guided me throughout the solution and took me to the end. I even forgot doing edge cases and that's how the interview ended. It was not a good experience at all. Okay, okay. So second round was a disaster. And so it was one good round and one bad round. Now what do we do? What Facebook did is actually they emailed me this. Thank you for taking the time to interview with us. We would like to schedule one more coding interview that will be the same format as the previous two. And I knew they were doing one more round with me because one of my rounds was good and one of my rounds was not good. So I was prepared for the challenge and I came for the final round. I knew this was a do or die round for me and this was a deciding coding interview. It turned out that the question which they gave me was validate IP address. I had not done this question before. Basically the question is just that you are given an IP address and you have to figure out whether it's IPv4 or whether it's IPv6. I actually managed to write the basic code pretty well, but I completely forgot some edge cases. And I realized this was because of the lack of practice. People who practice a lot really give a lot of importance to edge cases. Although I could get the basic naive code pretty correct, I forgot considering the edge cases. And my interviewer told me this in the at the end of the call itself. And I knew that probably I was not going to be selected. Finally, after the interview, one or two days later, Facebook was very prompt and they sent me this email saying that I just heard back from our candidate review session and we will unfortunately not be moving forward with the interview process. And I knew this was going to happen because the third interview was not very good. Just one thing. I would expect Meta or Facebook to Improve. Is that so they said that from a legal standpoint, I'm not allowed to share any specific feedback. This is one area where I think they can improve because a candidate, if the candidate knows what they could do better, then people will really improve. Overall, the meta interview process was quite professional and they guided me throughout the process. They even gave me the preparation material themselves. It's just that I did not have enough time for preparation, but this gave me enough confidence that as a mechanical engineer who had done no coding rounds before, who had no coding experience, I can reach the final round and I can get one foot in the door. If I just had one one and a half months to practice, I'm sure I would have cracked this interview. After this rejection, I again went back to my PhD work and continued for two more years at MIT and finally graduated from MIT in 2022. Okay, so this was my interviewing experience with Meta or Facebook everyone. Unfortunately, I got rejected in the third coding interview. But even with such a basic background of coding and having given no coding interviews before, I was very happy that I reached the third round and I was so close to getting an internship. This serves as a reminder, or rather you can take my example. If you are not from a CS background, you can still master these interviews if you put in the hard work, you can still do a really good job at these interviews if you practice enough questions. It is just a matter of executing on that day and practicing enough. I still believe if I had one or two more months of preparation, I would have answered the coding interviews correctly. Correctly. Thank you everyone for watching this video and I'll make more such videos regarding how I became eligible for getting this interview in the first place. Being a mechanical engineer, how I built my profile in machine learning so that recruiters reached me. I did not reach recruiters in the first place. See you in my later videos.